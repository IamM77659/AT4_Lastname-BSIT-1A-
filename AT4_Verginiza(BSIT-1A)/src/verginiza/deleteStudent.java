/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package verginiza;
// imports relevant packages
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Students Account
 */
public class deleteStudent extends javax.swing.JFrame {

    /**
     * Creates new form addStudent
     */
    private static String name, pass;
    private static final String filepath = "src\\verginiza\\data_1.json";
    private static JSONParser jsonParser = new JSONParser();
    private static JSONObject use = new JSONObject();
    private static JSONArray userlist = new JSONArray();
    private static JSONObject record = new JSONObject();

    public deleteStudent() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        passField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JBTNdel = new javax.swing.JButton();
        JBTNcancel = new javax.swing.JButton();
        JClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(50, 50, 51));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        passField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passFieldActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter Name");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Password");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Delete Student");

        JBTNdel.setBackground(new java.awt.Color(153, 0, 0));
        JBTNdel.setForeground(new java.awt.Color(255, 255, 255));
        JBTNdel.setText("Delete");
        JBTNdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNdelActionPerformed(evt);
            }
        });

        JBTNcancel.setText("Cancel");
        JBTNcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNcancelActionPerformed(evt);
            }
        });

        JClear.setText("Clear");
        JClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JBTNcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(JClear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(JBTNdel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTNdel)
                    .addComponent(JBTNcancel)
                    .addComponent(JClear))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void JBTNdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNdelActionPerformed
       
    /**
     This method deletes a student record when delete button is pressed based on the entered username and password.
     It first checks if the input fields are empty and prompts the user for confirmation.
     If the user confirms, it searches for the student in the list and removes the matching record.
     The updated data is then saved, and the user is redirected to the menu.
     If the student is not found, an error message is displayed.
     Any exceptions encountered are logged and shown as an error message.
    */
        // Retrieve the entered username and password from the input fields
        name = nameField.getText();
        pass = passField.getText();
        
        // Check if both fields are empty
        if (name.isBlank() && pass.isBlank()) {
            // Show a warning message if username and password are not entered
            JOptionPane.showMessageDialog(null, "Please enter username and password.", "Message", JOptionPane.WARNING_MESSAGE);
        } else {
             // Show a confirmation dialog asking if the user really wants to delete the student
            int confirm = JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete this student? ", "Delete Student", JOptionPane.YES_NO_OPTION);
            
            // Proceed with deletion only if the user clicks "Yes"
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    // Load the existing user data from the file
                    filecheck();

                    boolean found = false;
                    
                    // Iterate through the user list in reverse order to safely remove an entry while looping
                    for (int a = userlist.size() - 1; a >= 0; a--) {
                        // Get the user object at the current index
                        JSONObject userobject = (JSONObject) userlist.get(a);
                        // Retrieve the stored username and password from the user object
                        String founduname = (String) userobject.get("username");
                        String foundpass = (String) userobject.get("password");
                        
                        // Check if the entered username and password match the stored data
                        if (name.equals(founduname) && pass.equals(foundpass)) {
                            // Remove the user from the list
                            userlist.remove(a);
                            // Mark as found to indicate successful deletion
                            found = true;
                            // Exit the loop after deleting the user
                            break;
                        }

                    }
                    // If the user was found and removed, save the updated data
                    if (found) {
                        save();
                        // Open the menu screen after deletion
                        Menu A = new Menu();
                        setVisible(false);
                        A.setVisible(true);

                    } else {
                        // Show an error message if the user was not found in the list
                        JOptionPane.showMessageDialog(null, "Student not found.", "Error", JOptionPane.ERROR_MESSAGE);

                    }
                    
                 // Show an error message if an exception occurs
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "An error occured.", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(deleteStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_JBTNdelActionPerformed

    private void JBTNcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNcancelActionPerformed
       /*totally closes the delete student window.
        dispose() is utilized to properly get rid of unused
        details.
        */
        Menu a = new Menu();
        dispose();
        a.setVisible(true);
    }//GEN-LAST:event_JBTNcancelActionPerformed

    private void JClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JClearActionPerformed
       //clears the entered details 
        nameField.setText("");
        passField.setText("");
    }//GEN-LAST:event_JClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(deleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(deleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(deleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(deleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new deleteStudent().setVisible(true);
            }
        });
    }

    public static void filecheck() throws FileNotFoundException, IOException, ParseException {
        FileReader reader = new FileReader(filepath);

        if (reader.ready()) {
            Scanner s = new Scanner(reader);
            String line = "";

            while (s.hasNext()) {
                line = line + s.nextLine();
            }

            if (!line.equals("")) {
                reader.close();
                FileReader reader2 = new FileReader(filepath);
                record = (JSONObject) jsonParser.parse(reader2);
                userlist = (JSONArray) record.get("data");
                reader2.close();
            }
        }
    }

    public static void save() throws IOException {
        try {
            FileWriter file = new FileWriter(filepath);
            file.write(record.toJSONString());
            file.close();
            JOptionPane.showMessageDialog(null, "Succesfully Deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "An error Occured. " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTNcancel;
    private javax.swing.JButton JBTNdel;
    private javax.swing.JButton JClear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField passField;
    // End of variables declaration//GEN-END:variables

}
